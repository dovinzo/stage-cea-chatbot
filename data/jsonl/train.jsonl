{"input": "I have installed SALOME (universal version for Linux mpi) on a workstation with Opensuse, then when I try to run the tool I get the following error: Failed to narrow the root naming context", "output": "You need to edit the SALOME launcher and uncomment this line: # context.addToLdLibraryPath(out_dir_Path + r\"/BINARIES-CO7/system_dep/gl\")"}

{"input": "Although there are pleny discussions on this case on the forum, I am unable to fix it. Suddenly I have the following error when launching Salome: \"Can't find a free port to launch omniNames. Try to kill the running servers and then launch SALOME again.\"", "output": "The CORBA booked port is stored in two files and SALOME uses these files to figure out which port is available or not. The reported error occurs when there is no free CORBA port. A booked CORBA port is not released if SALOME session ends on error. In that case you need to delete residual files. On Linux you need to delete files starting with  .omni* and salome_PortManager.cfg in /tmp directory. On Windows, you need to delete %appdata%\\.omni* and %appdata%\\.salome_PortManager.cfg"}

{"input": "I have installed SALOME on Windows 10. it seems some path settings are not correct after the installation. Please see the attached image. This is only one hint of not finding the needed dll file, there are many other warning messages after I closed this dialog. like omniORBxxxx.dll, SalomeLifecycleCORBA.dll, SalomeContainer.dll, SalomeNS.dll etc.... What am I missing here ?","output":"SALOME complains about missing DLL files. Here you need to ensure that you installed SALOME in a directory which path is as short as possible, like e.g. C:/S. This ensures that PATH environment variable length is not too long."}

{"input": "I just downloaded the last version of salome for ubuntu and as in a ubuntu machine, i extracted with tar but when I run salome,get the following error: \"ERROR:salomeContext:Unexpected error: ModuleNotFoundError: No module named 'psutil'\". I know that there is a windows 10 native version, but I could not succesuflly run .py scripts from the terminal with this version. thats why I was looking to install the ubuntu vr inside WSL. How do I fix this error ?","output":"You need to ensure that python3-psutil is installed. Note, that you can check all missing packages as written in the README, with command: sat/sat config SALOME-9.11.0-native --check_system"}

{"input": "Maybe someone could suggest some IDE to work (edit and debug) with sources of core SALOME modules (KERNEL, GUI, GEOM and SMESH are of the particular interest) ?","output":"We recommand to use Visual Code IDE which can be launched within SALOME environment. To launch Visual Studio Code, in the main menu bar, select tools, then plugins and Launch VSCode. This will launch Visual Studio Code with SALOME environment."}

{"input": "When I launch SALOME, I get the following error: SALOME_Session_Server: error while loading shared libraries: libicui18n.so.62: cannot open shared object file: No such file or directory. What am I missing ?","output":"From the error message, you need to install the  Library for the International Components for Unicode. libicui -  Search for the version with apt if you are running Debian or Ubuntu and dnf if you are running Fedora or CentOS."}

{"input": "I have a problem running SALOME which gives the following error: Searching for a free port for naming service: 2814 - OK. SALOME_Session_Server: error while loading shared libraries: libOpenGL.so.0: cannot open shared object file: No such file or directory. Please help me.","output":"As reported by SALOME_Session_Server, you need to install the package which provides the libOpenGL.so library. On Ubuntu you need to run:  apt-file search libOpenGL.so. On Fedora or any RedHat flavor distribution, you need to run: dnf whatprovides libOpenGL.so."}

{"input": "does anybody have an idea how to speed up the startup of Salome for Windows? I always have to wait for a long time: Searching for a free port for naming service: 2824 - OK. Searching Naming Service   found in 0.0 seconds.","output":"SALOME uses omniORB which implements CORBA. The omniORB server response can be slow. You can tune the response by increasing the timeout time. To do this define the environment variable CSF_DelayServerRequest and set it to a large value."}

{"input": " I've a script that does generating geometry and mesh, running that script without open SALOME GUI? I'm asking this question for server using. If the answer is yes, how?","output":"you need to run: salome -t yourPythonScript.py"}

{"input": "Dear all, I just got new laptop with 4k display. Salome icons are so small that they are hardly visible. How can one get them larger?","output":"Hi, we also had this kind of issue with 4k displays. Here is how we fixed it on Windows. First launch SALOME, then right click on the SALOME icon on the task bar, then right click on SALOME_Sesion_Server.exe, Properties. In the Compatibility tab, Change High DPI settings. Then select both checkboxes and on the last one select System (Enhanced). Finally, lauch SALOME again and it should work."}

{"input": "Dear all, is there a safe way to remove all geometry and meshes in a study to free memory? I have to run the script in a loop and encounter some problems because of full memory. I tried to close the study at the end of the loop and create a new one but this prevents the python console from printing any output (it is printed when all the loops are finished). Preferred way would be to clear the study and run the loop inside the same study. Any suggestions are appreciated.","output":"Hello Franz, I believe you can use:\n  import salome\n  salome.salome_close()\nThis cleans up the study and related context.\nAlternatively you can just invoke:\n  salome.myStudy.Clear()\nbut first approach is preferable."}

{"input": "Due to breaking two fingers in a motorcycling accident, I find using the middle mouse button nearly impossible. Is there any way to reconfigure Salome to allow me to use the right mouse button for panning and rotating instead?","output":"there is no such preference in Salome for now. But it is a good idea to add it in a future version."}

{"input": "As I want to export all the node coordinates, is there a faster way than looping through all the nodes of the mesh and obtaining their coordinates by GetNodeXYZ(node_id)? In the MED module, I could simply write mesh.getCoords().toNumPyArray(), where mesh is a MEDFileUMesh object. Is there something equivalent in the SMESH module?","output":"In page https://docs.salome-platform.org/latest/gui/SMESH/smeshpy_interface.html#smeshpy-interface-page there is a script demonstrating retrieval of node coordinates. "}

{"input": "When trying to use the \"Save State...\" menu to a python file in PARAVIS, I get no python file. This function works fine with Paraview standalone.","output":"I confirm that the issue occurs on both Windows and Linux: saving a state to Python file format with Paravis leads to a warning message in the message log windows: Empty state generated. and the file is not dumped."}

{"input": "I may ask you some question about removing the intersections in the following example. I tried a lot of Salome functions to get rid of the intersection but nothing was working even though, the geometry is very simple. In former versions, I remember to resolve such problems using the \"Sewing\" filter. However, this is not working here either.","output":"if I understand correctly, you want to delete the smaller surface and join the bigger two. I had success with the following actions:\n    1) New Entity > Explode > Shell\n    2) Delete the small surface\n    3) Operations > Boolean > Fuse"}

{"input": "If I have a small box inside a big box, how do I remove on of the faces of the small box and connect the two volumes together?","output":"You can achieve you goal this way. Remove one face of the small box, for example by creating a group of all but one faces. Then partition the big box and the group."}

{"input": "I want to create a HEX-mesh of a revolve-symmetric body, using algo Extrusion3D and a submesh on 1 of the 2 lateral faces. It fails and I detected that the inner cylindrical surface does not contain 4 curves (base and top of extrusion, and two \"along-extrusion-curves\") as it should be. But the base (or top) curve is split in 2 colinear curves, so the surface is composed of 5 curves What is the best way to repair this surface to make it consist of the only 4 curves as needed?","output":"Repair > Remove extra edges should help you"}

{"input": "is it possible - and how - to created WITHOUT GEOMETRY a 3D-mesh from a closed skin of 2D-elements? For example after import of the 2D-mesh which then is no longer associated with geometry","output":"In the main menu: Mesh, then Edit mesh on the 2D mesh, where you assign 3D NETGEN as usually"}

{"input": "In Shaper, is it possible to get the coordinates of a point created by \"By distance on edge\". I tried  Point_1.point().x() and Point_1.point().pnt().x() but both return a value of 1.797e+308. Iâ€™m looking for something similar to geompy.PointCoordinates.","output":"Since Point_1 is not created by defining its coordinates, but  by its distance on edge, the coordinates attributes are not filled. In order to access the coordinates, they suggest to use instead:\n  from GeomAPI import GeomAPI_Vertex\n  p1= GeomAPI_Vertex(Point_1.defaultResult().shape())\n  p1.x()"}

{"input": "I was wondering how can I get all faces that have a specific normal? Basically, in the attached image I want to get the faces that have normal OY (need to do this from Python script). I tried the followings: \nFace_ids = geompy.SubShapeAllSortedCentres(StiffenedPlate, geompy.ShapeType[\"FACE\"])\nfor fce in Face_ids:\n    vnorm = geompy.GetNormal(fce)\nHowever, from here I cannot figure out how to get the ids of faces with normal in opposite direction of OY?","output":"You can do:\nFace_ids = geompy.SubShapeAllSortedCentres(StiffenedPlate, geompy.ShapeType[\"FACE\"])\nfor fce in Face_ids:\n    norm = geompy.GetNormal(fce)\n    vec = geompy.VectorCoordinates(norm)\n    Mag = math.sqrt(vec[0] ** 2 + vec[1] ** 2 + vec[2] ** 2)\n    theta = math.degrees(math.acos(geompy.DotProduct(norm, OY) / Mag))\n    if\nabs(theta - 180.0) <= 1.0:\n        print(geompy.GetSubShapeID(StiffenedPlate, fce))\n        fid = geompy.GetSubShapeID(StiffenedPlate, fce)\n        geompy.addToStudy(norm, \"face_{}_norm\".format(fid))"}
